<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.clojure</groupId>
    <artifactId>clojure-pom</artifactId>
    <version>1.0.0</version>
  </parent>
  <artifactId>clojure-contrib</artifactId>
  <name>${artifactId}</name>
  <version>1.0-SNAPSHOT</version>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <configuration>
              <tasks>
                <java fork="true"
                      classname="clojure.lang.Compile"
                      classpathref="maven.compile.classpath">
                  <sysproperty key="clojure.compile.path"
                               value="${project.build.outputDirectory}" />
                  <arg value="clojure.contrib.accumulators"/>
                  <arg value="clojure.contrib.agent-utils"/>
                  <arg value="clojure.contrib.classpath"/>
                  <arg value="clojure.contrib.combinatorics"/>
                  <arg value="clojure.contrib.command-line"/>
                  <arg value="clojure.contrib.complex-numbers"/>
                  <arg value="clojure.contrib.cond"/>
                  <arg value="clojure.contrib.condition"/>
                  <arg value="clojure.contrib.condt"/>
                  <arg value="clojure.contrib.core"/>
                  <arg value="clojure.contrib.dataflow"/>
                  <arg value="clojure.contrib.datalog"/>
                  <arg value="clojure.contrib.datalog.database"/>
                  <arg value="clojure.contrib.datalog.literals"/>
                  <arg value="clojure.contrib.datalog.magic"/>
                  <arg value="clojure.contrib.datalog.rules"/>
                  <arg value="clojure.contrib.datalog.softstrat"/>
                  <arg value="clojure.contrib.datalog.util"/>
                  <arg value="clojure.contrib.def"/>
                  <arg value="clojure.contrib.duck-streams"/>
                  <arg value="clojure.contrib.error-kit"/>
                  <arg value="clojure.contrib.except"/>
                  <arg value="clojure.contrib.fcase"/>
                  <arg value="clojure.contrib.find-namespaces"/>
                  <arg value="clojure.contrib.fnmap"/>
                  <arg value="clojure.contrib.gen-html-docs"/>
                  <arg value="clojure.contrib.generic"/>
                  <arg value="clojure.contrib.generic.arithmetic"/>
                  <arg value="clojure.contrib.generic.collection"/>
                  <arg value="clojure.contrib.generic.comparison"/>
                  <arg value="clojure.contrib.generic.functor"/>
                  <arg value="clojure.contrib.generic.math-functions"/>
                  <arg value="clojure.contrib.graph"/>
                  <arg value="clojure.contrib.greatest-least"/>
                  <arg value="clojure.contrib.import-static"/>
                  <arg value="clojure.contrib.jar"/>
                  <arg value="clojure.contrib.java-utils"/>
                  <arg value="clojure.contrib.javadoc.browse"/>
                  <arg value="clojure.contrib.javadoc.browse-ui"/>
                  <arg value="clojure.contrib.json.read"/>
                  <arg value="clojure.contrib.json.write"/>
                  <arg value="clojure.contrib.lazy-seqs"/>
                  <arg value="clojure.contrib.lazy-xml"/>
                  <arg value="clojure.contrib.macro-utils"/>
                  <arg value="clojure.contrib.macros"/>
                  <arg value="clojure.contrib.map-utils"/>
                  <arg value="clojure.contrib.math"/>
                  <arg value="clojure.contrib.miglayout"/>
                  <arg value="clojure.contrib.miglayout.internal"/>
                  <arg value="clojure.contrib.mmap"/>
                  <arg value="clojure.contrib.monads"/>
                  <arg value="clojure.contrib.ns-utils"/>
                  <arg value="clojure.contrib.pprint.ColumnWriter"/>
                  <arg value="clojure.contrib.pprint.PrettyWriter"/>
                  <arg value="clojure.contrib.pprint"/>
                  <arg value="clojure.contrib.pprint.utilities"/>
                  <arg value="clojure.contrib.probabilities.finite-distributions"/>
                  <arg value="clojure.contrib.probabilities.monte-carlo"/>
                  <arg value="clojure.contrib.probabilities.random-numbers"/>
                  <arg value="clojure.contrib.prxml"/>
                  <arg value="clojure.contrib.repl-ln"/>
                  <arg value="clojure.contrib.repl-utils"/>
                  <arg value="clojure.contrib.seq-utils"/>
                  <arg value="clojure.contrib.server-socket"/>
                  <arg value="clojure.contrib.set"/>
                  <arg value="clojure.contrib.shell-out"/>
                  <arg value="clojure.contrib.singleton"/>
                  <arg value="clojure.contrib.sql"/>
                  <arg value="clojure.contrib.sql.internal"/>
                  <arg value="clojure.contrib.stacktrace"/>
                  <arg value="clojure.contrib.str-utils"/>
                  <arg value="clojure.contrib.stream-utils"/>
                  <arg value="clojure.contrib.swing-utils"/>
                  <arg value="clojure.contrib.template"/>
                  <arg value="clojure.contrib.test-is"/>
                  <arg value="clojure.contrib.test-is.tap"/>
                  <arg value="clojure.contrib.trace"/>
                  <arg value="clojure.contrib.types"/>
                  <arg value="clojure.contrib.walk"/>
                  <arg value="clojure.contrib.with-ns"/>
                  <arg value="clojure.contrib.zip-filter"/>
                  <arg value="clojure.contrib.zip-filter.xml"/>
                </java>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>test</id>
            <configuration>
              <tasks>
                <java classname="clojure.main" classpathref="maven.test.classpath">
                  <arg value="-e"/>
                  <arg value="(require '(clojure.contrib [test-clojure :as main]))
                              (main/run)"/>
                </java>
                <java classname="clojure.main" classpathref="maven.test.classpath">
                  <arg value="-e"/>
                  <arg value="(require '(clojure.contrib [test-contrib :as main]))
                              (main/run)"/>
                </java>
                <java classname="clojure.main" classpathref="maven.test.classpath">
                  <arg value="-e"/>
                  <arg value="(require '(clojure.contrib.datalog.tests
                                          [test :as main]))
                              (main/run)"/>
                </java>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
